Julia:
 ModuleStart: "module ${mn}"
 ModuleEnd: "end # module"
 MainStart: "function  main(args)"
 MainEnd: "end\nexport main"         
 ImportStart: ""
 ImportEnd: ""
 ImportElement: "include(\"${inm}\")"
Go:
 ModuleStart: "package ${mn}"
 ModuleEnd: ""
 MainStart: "func  main()"
 MainEnd: "}"         
 ImportStart: ""
 ImportEnd: ""               
 ImportElement: "import \"${inm}\""
Python:
 ModuleStart: "# ${mn} module"
 ModuleEnd: ""
 MainStart: "if __name__ ==  'main':"
 MainEnd: ""         
 ImportStart: ""
 ImportEnd: ""               
 ImportElement: "import ${inm}"
Java:
 ModuleStart: "public class ${mn} {"
 ModuleEnd: "}"
 MainStart: "public static  main( String[] args ){"
 MainEnd: "}"         
 ImportStart: ""
 ImportEnd: ""               
 ImportElement: "import ${inm};"
c:
 ModuleStart: "# implementing ${mn}"
 ModuleEnd: "# end of implementation"
 MainStart: "void  main(void){"
 MainEnd: "}"         
 ImportStart: ""
 ImportEnd: ""               
 ImportElement: "import ${inm}"
vhdl:
 ModuleStart: "entity ${mn} is\nend;"
 ModuleEnd: ""
 MainStart: "architecture ${mn} is\nbegin\n"
 MainEnd: "end ${mn};"         
 ImportStart: ""
 ImportEnd: ""               
 ImportElement: "use ${inm};"
Haskell:
 ModuleStart: "module ${mn}"
 ModuleEnd: "end # module"
 MainStart: "main = do"
 MainEnd: ""         
 ImportStart: ""
 ImportEnd: ""               
 ImportElement: "import ${inm}"

